"Valida los tipos de nivel"

enum Level {
  beginner
  intermidiate
  advanced
}

union GlobalSearch = Course | Student | Monitor


type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String
  people: [Student]
  level: Level
}

interface Person{
   _id : ID!
  name: String!
  email: String!
}

type Student implements Person {
  _id : ID!
  name: String!
  email: String!
  avatar: String
}

type Monitor implements Person {
  _id : ID!
  name: String!
  email: String!
  phone: String
}

type Query {
  "Devuelve todos cursos"
  getCourses: [Course]
  "Devuelve un curso"
  getCourse(id: ID!): Course
  "Devuelve todos estudiante"
  getPeople: [Person]
  "Devuelve un estudiante"
  getPerson(id: ID!): Person
  "Ejecuta una busqueda global"
  searchItems(keyword: String!) : [GlobalSearch]
}

input CourseInput {
  title: String!
  teacher: String
  description: String!
  topic: String
}

input CourseEditInput {
  title: String
  teacher: String
  description: String
  topic: String
}

input PersonInput{
  name: String!
  email: String!
  phone: String
  avatar: String
}

input PersonEditInput{
  name: String
  email: String
  phone: String
  avatar: String
}

type Mutation {
  "Crea un curso"
  createCourse(input: CourseInput!): Course
  "Edita un curso"
  editCourse(_id:ID!, input: CourseEditInput!): Course
  "Crea una persona"
  createPerson(input: PersonInput!): Person
  "Edita una persona"
  editPerson(_id:ID!, input: PersonEditInput!): Person
  "Agrega una persona a un curso"
  addPeople(courseID: ID!, personID: ID!) : Course
}
